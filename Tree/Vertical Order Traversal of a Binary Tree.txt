/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        map<int,vector<int>>mpp;
        vector<vector<int>>ans;
        while(!q.empty()){
            int sz=q.size();
            map<int,multiset<int>>temp;
            while(sz--){
                auto it=q.front();
                q.pop();
                temp[it.second].insert(it.first->val);
                if(it.first->left){
                    q.push({it.first->left,it.second-1});
                }
                if(it.first->right){
                    q.push({it.first->right,it.second+1});
                }
            }
            for(auto it:temp){
                for(auto iter:it.second){
                    mpp[it.first].push_back(iter);
                }
            }
        }
        for(auto it:mpp){
            ans.push_back(it.second);
        }
        return ans;
    }
};