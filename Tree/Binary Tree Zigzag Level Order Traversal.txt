/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL)return ans;

        queue<TreeNode*>node;
        node.push(root);
        bool lefttoright=true;

        while(!node.empty()){
            int size=node.size();
            vector<int>row(size);
            for(int i=0;i<size;i++){
                TreeNode* temp=node.front();
                node.pop();

                // find position to fill's node value
                int index=(lefttoright)?i:(size-1-i);
                row[index]=temp->val;

                if(temp->left){
                    node.push(temp->left);
                }
                if(temp->right){
                    node.push(temp->right);
                }
            }
            // after this level
            lefttoright =! lefttoright;
            ans.push_back(row);
        }
        return ans;
    }
};