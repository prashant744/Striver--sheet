class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()){
            return false;
        }
        int c=0;
        sort(s.begin(),s.end());
        sort(t.begin(),t.end());

        for(int i=0;i<s.size();i++){
            if(s[i]==t[i]){
                c++;
            }
        }
        if(c==s.size()){
            return true;
        }else{
            return false;
        }
    }
};



// optimal Solution


class Solution {
public:
    bool isAnagram(string s, string t) {
        unordered_map<char,int>mp;
        if(s.length()!=t.length())return false;
        for(auto i:s){
            mp[i]++;
        }
        for(int i=0;i<t.size();i++){
            if(mp.find(t[i])!=mp.end()){
                mp[t[i]]--;
            }
        }
        for(auto i:s){
            if(mp[i]!=0){
                return false;
            }
        }
        return true;
    }
};