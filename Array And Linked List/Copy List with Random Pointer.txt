/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
Node* copyRandomList(Node* head)
    {
        if(head==NULL)
            return head;
        Node*curr=head;
        while(curr!=NULL)
        {
            Node*next = curr->next;
            Node*cloneNode = new Node(curr->val);
            curr->next= cloneNode;
            curr->next->next = next;
            curr=next;  
        }
        curr=head;
        while(curr!=NULL)
        {
            curr->next->random = (curr->random!=NULL)?curr->random->next:NULL;
            curr=curr->next->next;
        }
        curr=head;
        Node* cloneNode= new Node(0);
        Node* clonetail= cloneNode;
        while(curr!=NULL)        {
            Node*next=curr->next->next;
            clonetail->next= curr->next;
            curr->next=next;
            curr=next;
            clonetail= clonetail->next; 
        }
        clonetail->next=NULL;
        return cloneNode->next;
        
    }
};