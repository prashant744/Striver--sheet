bool isPalindrom(int start,int end,string str){
    while(start<end){
        if(str[start]!=str[end])return false;
        start++;
        end--;
    }
    return true;
}

class Solution{
public:
    int palindromicPartition(string str)
    {
        // code here
        int n=str.size();
        vector<int>dp(n+1,0);
        dp[n]=0;
        
        for(int i=n-1;i>=0;i--){
            int minCost=INT_MAX;
            for(int j=i;j<n;j++){
                if(isPalindrom(i,j,str)){
                    int cost=1+dp[j+1];
                    minCost=min(minCost,cost);
                }
            }
            dp[i]=minCost;
        }
        return dp[0]-1;
    }
};