class Solution {
public:

    bool isValid(vector<vector<char>>&board,char c,int row,int col){
        for(int i=0;i<9;i++){
            if(board[row][i]==c)return false;
            else if(board[i][col]==c)return false;
            else if(board[3*(row/3)+i/3][3*(col/3)+i%3]==c)return false;
        }
        return true;
    }
    
    bool solver(vector<vector<char>>& board,int rstart){
        for(int row=rstart;row<9;row++){
            for(int col=0;col<9;col++){
                if(board[row][col]=='.'){
                    for(char c='1';c<='9';c++){
                        if(isValid(board,c,row,col)){
                            board[row][col]=c;
                            if(solver(board,rstart)){
                                return true;
                            }else{
                                board[row][col]='.';
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }

    void solveSudoku(vector<vector<char>>& board) {
        solver(board,0);
    }
};